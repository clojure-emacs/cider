;; This is a script to be loaded from the root CIDER directory. It will prepare
;; all requirements and then run `check-declare-directory' on
;; `default-directory'. For example:
;;     emacs -Q --batch -l test/cider-checks.el

;; This assumes that all CIDER dependencies are already on the package dir
;; (probably from running `cask install').

(add-to-list 'load-path (expand-file-name "./"))
(require 'package)
(require 'check-declare)
(package-initialize)
(setq checkdoc-package-keywords-flag nil)
(setq checkdoc-arguments-in-order-flag nil)
(setq checkdoc-common-verbs-wrong-voice
      '(("adds" . "add")
        ("allows" . "allow")
        ("appends" . "append")
        ("applies" . "apply")
        ("arranges" . "arrange")
        ("brings" . "bring")
        ("calls" . "call")
        ("catches" . "catch")
        ("changes" . "change")
        ("checks" . "check")
        ("contains" . "contain")
        ("converts" . "convert")
        ("creates" . "create")
        ("destroys" . "destroy")
        ("disables" . "disable")
        ("executes" . "execute")
        ("evals" . "evaluate")
        ("evaluates" . "evaluate")
        ("finds" . "find")
        ("forces" . "force")
        ("gathers" . "gather")
        ("generates" . "generate")
        ("goes" . "go")
        ("guesses" . "guess")
        ("highlights" . "highlight")
        ("holds" . "hold")
        ("ignores" . "ignore")
        ("indents" . "indent")
        ("initializes" . "initialize")
        ("inserts" . "insert")
        ("installs" . "install")
        ("investigates" . "investigate")
        ("keeps" . "keep")
        ("kills" . "kill")
        ("leaves" . "leave")
        ("lets" . "let")
        ("loads" . "load")
        ("looks" . "look")
        ("makes" . "make")
        ("marks" . "mark")
        ("matches" . "match")
        ("moves" . "move")
        ("notifies" . "notify")
        ("offers" . "offer")
        ("parses" . "parse")
        ("performs" . "perform")
        ("prepares" . "prepare")
        ("prepends" . "prepend")
        ("reads" . "read")
        ("raises" . "raise")
        ("removes" . "remove")
        ("replaces" . "replace")
        ("resets" . "reset")
        ("restores" . "restore")
        ("returns" . "return")
        ("runs" . "run")
        ("saves" . "save")
        ("says" . "say")
        ("searches" . "search")
        ("selects" . "select")
        ("sets" . "set")
        ("sex" . "s*x")
        ("shows" . "show")
        ("signifies" . "signify")
        ("sorts" . "sort")
        ("starts" . "start")
        ("stores" . "store")
        ("switches" . "switch")
        ("tells" . "tell")
        ("toggles" . "toggle")
        ("tries" . "try")
        ("turns" . "turn")
        ("undoes" . "undo")
        ("unloads" . "unload")
        ("unmarks" . "unmark")
        ("updates" . "update")
        ("uses" . "use")
        ("yanks" . "yank")
        ))
(let ((files (directory-files default-directory t
                              "\\`[^.].*\\.el\\'" t)))
  (dolist (file files)
    (checkdoc-file file))
  (when (apply #'check-declare-files files)
    (kill-emacs 1)))
